[
    {
        "id": "1f7fcac9-0f15-4e61-9b1b-722b8a9898c8",
        "author_id": "be2a216c-2f99-48d3-a506-741fb6168def",
        "title": "Feedback on groupmate's feedback #1",
        "content": "I really liked detailed steps you enlisted and how the technology might require the change in the Karzinka‚Äôs internal processes and how to make sure users can adapt to it seamlessly.  \r\n\r\nHowever, I would strongly recommend you to prove your arguments with reliable sources from the similar cases that we identified earlier or ones that can be found online. \r\n\r\nHere is the illustration from your draft:\r\n\r\n>_‚Äú A comprehensive strategy for implementing this is to, first, create a new app specifically for the self checkout system or to update the current Korzinka application‚Ä¶ ‚Äú_¬†\r\n\r\nHere, you have mentioned the development or update of the existing app and how it will be utilized. The similar idea is discussed in [this research paper](https://www.researchgate.net/publication/280490924_Mobile_self-checkout_systems_in_the_FMCG_retail_sector_A_comparison_analysis)\r\n\r\nIt would be so great if you could <mark style=\"background: #D2B3FFA6;\">identify the arguments</mark> and advantages for this step <mark style=\"background: #D2B3FFA6;\">from other sources,</mark> proving that Karzinka can benefit from it. \r\n\r\nIn short, the general structure is the following (of course, you can also add your own solutions, but overall recommendation is *to support them with external academic sources)* :  \r\n\r\n> According to (source authors), *bla-bla-bla* has successfully worked out, showing (result of the implementation), and thats why Karzinka might as well benefit from integration of the *bla-bla-bla* by doing *bla-bla-bla*\r\n\r\nYou can use in-text citations and proper referencing using [this book](https://www.westminster.ac.uk/sites/default/public-files/general-documents/Referencing%20Your%20Work%20booklet_06.1.pdf)\r\n\r\nAdditionally, in my response to Question #2, I also mention a few study cases with some statistical results and where (company or place) the case has taken place , and you may also refer to those justifications. \r\n\r\nOn top of that, I have earlier send a detail document on the solution that we have chosen with the group (the self-checkout) - that's basically a summary of a related research paper. You may also want to go over it. \r\n\r\nThank you very much üôèüèªüôèüèªüôèüèª",
        "is_anonymous": false,
        "is_draft": false,
        "tags": [
            "university issues",
            "university assignments",
            "organizational behavior"
        ],
        "views_count": 6,
        "created_at": "2025-03-23T17:09:12.161Z",
        "updated_at": "2025-03-23T17:39:41.324Z"
    },
    {
        "id": "80d1b62c-711a-41f7-97cb-691234683cf6",
        "author_id": "83735b55-ae2f-47aa-9c38-1b60efa1471a",
        "title": "Impact of IT on retail industry",
        "content": "Core Study **Context and Background:**\r\n- The study investigates the *impact of information technology on retail industry*, specifically focusing on *employee and customer acceptance* of smart retail technologies (SRT) in Jordan (549 page)\r\n- Data was collected from 134 retail stores across Jordan's metropolitan cities, with 480 customer responses (558 page)\r\n\r\nKey Technology Adoption Findings:\r\n- **Technology readiness** was found to significantly impact retail performance (Œ≤ = 0.620), indicating that a 1% increase in technology readiness results in a 62% improvement in retailer performance (561 page)\r\n- **Perceived usefulness** showed substantial impact (Œ≤ = 0.576) on retailer performance, suggesting a 57.6% improvement for each 1% increase (561 page)\r\n\r\n**Smart Retail Technology (SRT) Implementation:**\r\n- SRT provides retail customer services through smart device networks and integrated retail infrastructure (551 page)\r\n- The study projects SRT assets to reach $36 billion by 2021 (551 page)\r\n\r\n**Customer Behavior and Technology Acceptance:**\r\n- Store *reputation plays a crucial role* - consumers see reputable stores as more **trustworthy** and **show favorable attitudes** toward SRT (552 page)\r\n- Both employee and customer preparedness need to be considered when implementing new technologies (565 page)\r\n\r\n**Implementation Challenges:**\r\n- Retail stores must ensure smart and user-friendly **innovations are introduced to reduce consumer discontent** (565 page)\r\n- The study found that intelligent, easy, and realistic technology can reduce consumer discontent and molestation (565 page)\r\n\r\n**Future Research Recommendations:**\r\n- Future studies should investigate customer adoption of specific technologies like smart displays, smart shopping carts, and NFC systems (566 page)\r\n- Research could expand to developing countries like Malaysia, India, and China to increase generalization possibilities (566 page)\r\n\r\nRegional Context:\r\n- Jordan's retail sector shows significant potential for growth in modern, organized retail segments (566 page)\r\n- The country's unique geographic location makes it a natural corridor for regional growth and international shopping (566 page)\r\n\r\nStudy Limitations:\r\n- Respondents could opt out of providing certain details\r\n- Self-administered questionnaires may have impacted efficacy\r\n- Potential sampling errors in randomized sampling locations (566 page)\r\n\r\n\r\n# References\r\n- *Source*:\r\n\t- [Research Gate Paper](https://www.researchgate.net/publication/357595045_THE_IMPACT_OF_INFORMATION_TECHNOLOGY_ON_RETAIL_INDUSTRY_AN_EMPRICAL_STUDY)\r\n- *Ref*: \r\n\t- *Theeb, K.A., Mansour, A.M., Khaled, A.S.D., Syed, A.A. and Saeed, A.M.M. (2023) ‚ÄòThe impact of information technology on retail industry: an empirical study‚Äô, Int. J. Procurement Management, Vol. 16, No. 4, pp.549‚Äì568.*",
        "is_anonymous": true,
        "is_draft": false,
        "tags": [
            "university issues",
            "university assignments",
            "research",
            "organizational behavior",
            "retail industry analysis"
        ],
        "views_count": 5,
        "created_at": "2025-03-23T17:14:49.695Z",
        "updated_at": "2025-03-24T12:56:52.030Z"
    },
    {
        "id": "b7fbdb8e-fd60-4608-90ae-1ee8613df3d4",
        "author_id": "83735b55-ae2f-47aa-9c38-1b60efa1471a",
        "title": "Introduction to R Programming - Week 1 Lecture Notes",
        "content": "## Table of Contents\r\n1. [Software Installation](#software-installation)\r\n2. [RStudio Interface](#rstudio-interface)\r\n3. [Arithmetic Operations](#arithmetic-operations)\r\n4. [Mathematical Functions](#mathematical-functions)\r\n5. [Relational Operators](#relational-operators)\r\n6. [Data Classes](#data-classes)\r\n7. [Missing Data](#missing-data)\r\n8. [R Objects and Assignment](#r-objects-and-assignment)\r\n\r\n## Software Installation\r\n### Required Software\r\n- **R**: The core programming language\r\n  - Download from CRAN (Comprehensive R Archive Network)\r\n  - Platform-specific versions available for Mac, Windows, Linux\r\n- **RStudio**: Integrated Development Environment (IDE)\r\n  - Download from Posit website\r\n  - Provides unified interface across operating systems\r\n\r\n### Important URLs\r\n- R Download: https://cran.r-project.org/\r\n- RStudio Download: https://posit.co/download/rstudio-desktop/\r\n\r\n## RStudio Interface\r\n### Key Components\r\n1. **Source Pane** (Top Left)\r\n   - Where R scripts are written and edited\r\n   - Save files with `.R` extension\r\n   ```r\r\n   # Example script content\r\n   # Calculate average temperature\r\n   temp_celsius <- 25\r\n   temp_fahrenheit <- (temp_celsius * 9/5) + 32\r\n   ```\r\n\r\n2. **Console** (Bottom Left)\r\n   - Displays executed commands and output\r\n   - Direct command entry possible\r\n   ```r\r\n   > 2 + 2\r\n   [1] 4\r\n   ```\r\n\r\n3. **Environment Pane** (Top Right)\r\n   - Shows active variables and objects\r\n   ```r\r\n   # After running:\r\n   temp_celsius    # Value: 25\r\n   temp_fahrenheit # Value: 77\r\n   ```\r\n\r\n## Arithmetic Operations\r\n### Basic Operators with Examples\r\n```r\r\n# Addition\r\n5 + 3        # Output: 8\r\n# Subtraction\r\n10 - 4       # Output: 6\r\n# Multiplication\r\n6 * 7        # Output: 42\r\n# Division\r\n15 / 3       # Output: 5\r\n# Exponents\r\n2 ^ 3        # Output: 8\r\n# Modulo (remainder)\r\n17 %% 5      # Output: 2\r\n# Integer division\r\n17 %/% 5     # Output: 3\r\n```\r\n\r\n### Order of Operations Examples\r\n```r\r\n# Different results based on parentheses\r\n4 + 2 * 3        # Output: 10 (multiplication first)\r\n(4 + 2) * 3      # Output: 18 (addition first)\r\n\r\n# Complex calculation\r\n((10 + 5) * 2) / 5   # Output: 6\r\n```\r\n\r\n## Mathematical Functions\r\n### Common Functions with Examples\r\n```r\r\n# Square root\r\nsqrt(16)              # Output: 4\r\nsqrt(c(9, 16, 25))   # Output: 3 4 5\r\n\r\n# Absolute value\r\nabs(-7.5)            # Output: 7.5\r\nabs(c(-2, 0, 2))     # Output: 2 0 2\r\n\r\n# Logarithms\r\nlog10(100)           # Output: 2\r\nlog(exp(1))          # Output: 1\r\n\r\n# Exponential\r\nexp(2)               # Output: 7.389056\r\n```\r\n\r\n### Function Help Example\r\n```r\r\n# Getting help for sqrt function\r\n?sqrt\r\n# Returns documentation showing:\r\n# sqrt(x)   # where x is a numeric vector\r\n```\r\n\r\n## Relational Operators\r\n### Examples with Different Data Types\r\n```r\r\n# Numeric comparisons\r\n5 < 10               # Output: TRUE\r\n7 >= 7               # Output: TRUE\r\n3 == 3               # Output: TRUE\r\n4 != 5               # Output: TRUE\r\n\r\n# String comparisons\r\n\"apple\" == \"apple\"   # Output: TRUE\r\n\"a\" < \"b\"            # Output: TRUE\r\n\r\n# Mixed type comparisons\r\n5 == \"5\"             # Output: FALSE\r\n```\r\n\r\n## Data Classes\r\n### Type Examples and Conversions\r\n```r\r\n# Numeric\r\nx <- 10.5\r\ntypeof(x)            # Output: \"double\"\r\n\r\n# Integer\r\ny <- 10L\r\ntypeof(y)            # Output: \"integer\"\r\n\r\n# Character\r\nname <- \"John\"\r\ntypeof(name)         # Output: \"character\"\r\n\r\n# Logical\r\nis_valid <- TRUE\r\ntypeof(is_valid)     # Output: \"logical\"\r\n\r\n# Type conversion examples\r\nas.integer(10.7)     # Output: 10\r\nas.character(123)    # Output: \"123\"\r\nas.numeric(\"456\")    # Output: 456\r\nas.Date(43800, origin = \"1899-12-30\") # \"2019-12-01\"\r\n```\r\n\r\n### Testing Types\r\n```r\r\n# Using is.* functions\r\nx <- 10.5\r\nis.numeric(x)        # Output: TRUE\r\nis.integer(x)        # Output: FALSE\r\nis.character(x)      # Output: FALSE\r\n\r\n# Multiple checks\r\ny <- \"123\"\r\nis.numeric(y)        # Output: FALSE\r\nis.numeric(as.numeric(y))  # Output: TRUE\r\n```\r\n\r\n## Missing Data\r\n### Working with NA and NaN\r\n```r\r\n# Creating missing values\r\nx <- c(1, NA, 3, NaN, 5)\r\n\r\n# Testing for NA\r\nis.na(x)             # Output: FALSE TRUE FALSE TRUE TRUE\r\n\r\n# Calculations with NA\r\nsum(c(1, NA, 3))     # Output: NA\r\nsum(c(1, NA, 3), na.rm = TRUE)  # Output: 4\r\n\r\n# NA vs NaN\r\n0/0                  # Output: NaN\r\nNA + 1               # Output: NA\r\n```\r\n\r\n## Type Conversion and Comparison\r\n### Understanding Type Conversion\r\n```r\r\n# Different numeric types\r\nx_int <- 5L          # integer\r\nx_num <- 5           # numeric/double\r\nx_int == x_num       # Output: TRUE (values are equal)\r\ntypeof(x_int) == typeof(x_num)  # Output: FALSE (types are different)\r\n\r\n# Detailed example\r\nvarA <- 3.3          # double/numeric\r\nvarB <- \"hello there\"  # character\r\nvarC <- FALSE        # logical\r\nvarD <- 5L           # integer\r\nvarE <- 5            # double\r\nvarF <- varD + varE  # double (integer + numeric = numeric)\r\nvarG <- 2 * varC     # numeric (numeric * logical = numeric)\r\n\r\n# Checking types\r\ntypeof(varA)   # \"double\"\r\ntypeof(varB)   # \"character\"\r\ntypeof(varC)   # \"logical\"\r\ntypeof(varD)   # \"integer\"\r\ntypeof(varE)   # \"double\"\r\ntypeof(varF)   # \"double\"\r\ntypeof(varG)   # \"double\"\r\n```\r\n\r\n### Key Points About Type Conversion\r\n4. **Implicit Conversion**\r\n   - R automatically converts between integer and numeric types in calculations\r\n   - Logical values convert to 1 (TRUE) or 0 (FALSE) in numeric operations\r\n   - The \"wider\" type usually prevails (e.g., integer + numeric = numeric)\r\n\r\n5. **Value vs Type Comparison**\r\n   ```r\r\n   5L == 5     # TRUE (comparing values)\r\n   typeof(5L) == typeof(5)  # FALSE (comparing types: \"integer\" vs \"double\")\r\n   ```\r\n\r\n6. **Type Hierarchy**\r\n   - character > numeric > integer > logical\r\n   - When mixing types, R usually converts to the higher type\r\n   ```r\r\n   1L + 2.5    # Result is numeric (2.5 wins)\r\n   TRUE + 1L   # Result is integer (1L wins)\r\n   TRUE + 1.0  # Result is numeric (1.0 wins)\r\n   ```\r\n\r\n## R Objects and Assignment\r\n### Variable Assignment Examples\r\n```r\r\n# Basic assignment\r\nage <- 25\r\nname <- \"Alice\"\r\n\r\n# Multiple assignments\r\nheight <- weight <- 70\r\n\r\n# Complex assignments\r\nbmi <- weight / (height/100)^2\r\n\r\n# Listing objects\r\nls()                 # Shows all objects in environment\r\n\r\n# Removing objects\r\nrm(age)              # Removes single object\r\nrm(list = ls())      # Removes all objects\r\n```\r\n\r\n### Naming Conventions Examples\r\n```r\r\n# Valid names\r\nvalid_name <- 1\r\nvalidName <- 2\r\nVALID_NAME <- 3\r\n.hidden_name <- 4\r\n\r\n# Invalid names (will cause errors)\r\n# 1name <- 5      # Can't start with number\r\n# _name <- 6      # Can't start with underscore\r\n# name-1 <- 7     # Can't use hyphen\r\n```\r\n\r\n---\r\n**Practice Exercises:**\r\n7. Create variables of different types and test their classes\r\n8. Perform arithmetic operations with variables\r\n9. Try working with missing values and understand their behavior\r\n10. Practice naming conventions and object assignments\r\n\r\n\r\n## References\r\n\r\n[[R data type and packages]] -> the continuation of the R chronicles (Week 2)\r\n\r\nR programming tutorial -> A 2 hours-long video tutorial\r\n![R Programming Tutorial](https://youtu.be/_V8eKsto3Ug?si=7OytJRUDdxaItPdh)",
        "is_anonymous": false,
        "is_draft": false,
        "tags": [
            "statistics",
            "university issues",
            "r programming language"
        ],
        "views_count": 64,
        "created_at": "2025-03-23T17:17:56.663Z",
        "updated_at": "2025-03-24T12:56:57.827Z"
    },
    {
        "id": "1d358d3c-3182-4d26-8778-5f73b6e9279f",
        "author_id": "be2a216c-2f99-48d3-a506-741fb6168def",
        "title": "Python cloud native engineer - epam job description",
        "content": "## Python Engineer\r\n\r\nWe seek a highly skilled **Python Engineer** with expertise in cloud computing and a strong focus on integrating AI capabilities into our projects. The ideal candidate will possess robust proficiency in Python and its frameworks, coupled with a deep understanding of at least one major cloud provider.\r\n\r\nAdditionally, familiarity with Large Language Models (LLM) and Retrieval Augmented Generation (RAG) is essential for seamlessly integrating AI capabilities.\r\n\r\n### **Responsibilities**\r\n\r\n- Facilitate development and deployment of cloud-native solutions, highlighting AI integration in our projects\r\n- Architect and launch AI-driven applications, leveraging Python frameworks such as Django, Flask or FastAPI\r\n- Integrate Large Language Models (LLM) and Retrieval Augmented Generation (RAG) into ongoing and upcoming projects to enhance language understanding and generation capabilities\r\n- Team up with various cross-functional teams to comprehend project objectives and convert them into AI-driven technical resolutions\r\n- Implement AI-based features and functionalities, utilizing cloud-native architectures and industry-standard practices\r\n- Write maintainable and well-documented code, adhering to coding standards and best practices\r\n- Stay updated with the latest advancements in Python, cloud computing, AI, and Cloud Native architectures, and proactively suggest innovative solutions to enhance our AI capabilities\r\n\r\n### **Requirements**\r\n\r\n- Proven expertise in Python programming language, with significant experience in AI integration\r\n- Proficiency in cloud computing with hands-on experience in major cloud platforms such as AWS, Azure, or Google Cloud Platform\r\n- Familiarity with Large Language Models (LLM) and Retrieval Augmented Generation (RAG)\r\n- Excellent problem-solving abilities and the capability to effectively collaborate within a team setting\r\n- Superior communication skills and the competence to seamlessly explain complex technical concepts to non-technical stakeholders\r\n\r\n### **Nice to have**\r\n\r\n- Knowledge of Cloud Native architectures and experience with tools like Kubernetes, Docker and microservices\r\n\r\n### **We offer**\r\n\r\n#### *We connect like-minded people:*\r\n- Delivering innovative solutions to industry leaders, making a global impact\r\n- Enjoyable working environment, whether it is the vibrant office or the comfort of your own home\r\n- Opportunity to work abroad for up to two months per year\r\n- Relocation opportunities within our offices in 55+ countries\r\n- Corporate and social events\r\n\r\n#### *We invest in your growth:*\r\n- Leadership development, career advising, soft skills and well-being programs\r\n- Certifications, including GCP, Azure and AWS\r\n- Unlimited access to LinkedIn Learning, Get Abstract, O'Reilly\r\n- Free English classes with certified teachers\r\n- Discounts in local language schools, including offline courses for the Uzbek language\r\n\r\n#### *We cover it all:*\r\n- Monetary bonuses for engaging in the referral program\r\n- Medical & family care package\r\n- Four trust days per year (sick leave without a medical certificate)\r\n- Discounts for fitness clubs, dance schools and sports programs\r\n- Benefits package (sports activities, a variety of stores and services)",
        "is_anonymous": false,
        "is_draft": false,
        "tags": [
            "job descriptions",
            "python",
            "cloud",
            "machine learning"
        ],
        "views_count": 14,
        "created_at": "2025-03-23T17:24:14.978Z",
        "updated_at": "2025-03-23T18:28:01.317Z"
    },
    {
        "id": "c8677322-8338-41d5-9ce5-3292ef1b77d5",
        "author_id": "be2a216c-2f99-48d3-a506-741fb6168def",
        "title": "Simple Python example",
        "content": "```python\r\ndef my_method(a: int, b: str, *args, **kwargs):\r\n    comma_sep_args = ', '.join(args)\r\n    return f\"{a} {b} {comma_sep_args}\"\r\n```",
        "is_anonymous": false,
        "is_draft": false,
        "tags": [],
        "views_count": 1,
        "created_at": "2025-03-24T12:59:02.817Z",
        "updated_at": "2025-03-24T12:59:02.831Z"
    }
]